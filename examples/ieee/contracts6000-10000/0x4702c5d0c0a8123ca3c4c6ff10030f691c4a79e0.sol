{"ercInter1.sol":{"content":"pragma solidity ^0.4.20;\n\ncontract ERC20Interface {\n  string public name;\n  string public symbol;\n  uint8 public  decimals;\n  uint public totalSupply;\n\n\n  function transfer(address _to, uint256 _value) returns (bool success);\n  function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\n  \n  function approve(address _spender, uint256 _value) returns (bool success);\n  function allowance(address _owner, address _spender) view returns (uint256 remaining);\n\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n}"},"erctest.sol":{"content":"pragma solidity ^0.4.20;\n\nimport \u0027./ercInter1.sol\u0027;\n\ncontract ERC200ghgjhghjg is ERC20Interface {\n    \n    mapping(address =\u003e uint256) public balanceOf;\n    mapping(address =\u003e mapping(address =\u003e uint256)) allowed;\n    \n    \n    \n    constructor() public {\n       name = \"Genesis Ecology\";\n       symbol = \"GE\";\n       decimals = 18;\n       totalSupply = 1800000000000000000000000000;\n       balanceOf[0x6eC629461DF014a126046b1373f52a9eCD5dE7f3] = totalSupply;\n    }\n    \n    \n  function transfer(address _to, uint256 _value) returns (bool success) {\n      require(_to != address(0));\n      require(balanceOf[msg.sender] \u003e= _value);\n      require(balanceOf[ _to] + _value \u003e= balanceOf[ _to]);\n      \n      \n      balanceOf[msg.sender] -= _value;\n      balanceOf[_to] += _value;\n      \n      emit Transfer(msg.sender, _to, _value);\n      return true;\n  }\n  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n      require(_to != address(0));\n      require(allowed[_from][msg.sender] \u003e= _value);\n      require(balanceOf[_from] \u003e= _value);\n      require(balanceOf[ _to] + _value \u003e= balanceOf[ _to]);\n      \n      balanceOf[_from] -= _value;\n      balanceOf[_to] += _value;\n      \n      allowed[_from][msg.sender] -= _value;\n      \n      emit Transfer(msg.sender, _to, _value);\n      \n      \n      \n      return true;\n  }\n  \n  function approve(address _spender, uint256 _value) returns (bool success) {\n      allowed[msg.sender][_spender] = _value;\n      \n      emit Approval(msg.sender, _spender, _value);\n      return true;\n  }\n  \n  function allowance(address _owner, address _spender) view returns (uint256 remaining) {\n      return allowed[_owner][_spender];\n  }\n\n}\n"}}