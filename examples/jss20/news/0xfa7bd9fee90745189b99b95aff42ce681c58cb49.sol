{"DoubleProxy.sol":{"content":"pragma solidity ^0.6.0;\r\n\r\nimport \"./IDoubleProxy.sol\";\r\n\r\ncontract DoubleProxy is IDoubleProxy {\r\n\r\n    address private _proxy;\r\n\r\n    mapping(address =\u003e bool) private _isProxy;\r\n\r\n    address[] private _proxies;\r\n\r\n    constructor(address[] memory proxies, address currentProxy) public {\r\n        init(proxies, currentProxy);\r\n    }\r\n\r\n    function init(address[] memory proxies, address currentProxy) public override {\r\n        require(_proxies.length == 0, \"Init already called!\");\r\n        for(uint256 i = 0; i \u003c proxies.length; i++) {\r\n            if(proxies[i] != address(0)) {\r\n                _proxies.push(proxies[i]);\r\n                _isProxy[proxies[i]] = true;\r\n            }\r\n        }\r\n        if(currentProxy != address(0)) {\r\n            _proxy = currentProxy;\r\n            if(!_isProxy[currentProxy]) {\r\n                _proxies.push(currentProxy);\r\n                _isProxy[currentProxy] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    function proxy() public override view returns(address) {\r\n        return _proxy;\r\n    }\r\n\r\n    function setProxy() public override {\r\n        require(_proxy == address(0) || _proxy == msg.sender, _proxy != address(0) ? \"Proxy already set!\" : \"Only Proxy can toggle itself!\");\r\n        _proxy = _proxy == address(0) ?  msg.sender : address(0);\r\n        if(_proxy != address(0) \u0026\u0026 !_isProxy[_proxy]) {\r\n            _proxies.push(_proxy);\r\n            _isProxy[_proxy] = true;\r\n        }\r\n    }\r\n\r\n    function isProxy(address addr) public override view returns(bool) {\r\n        return _isProxy[addr];\r\n    }\r\n\r\n    function proxiesLength() public override view returns(uint256) {\r\n        return _proxies.length;\r\n    }\r\n\r\n    function proxies() public override view returns(address[] memory) {\r\n        return proxies(0, _proxies.length);\r\n    }\r\n\r\n    function proxies(uint256 start, uint256 offset) public override view returns(address[] memory out) {\r\n        require(start \u003c _proxies.length, \"Invalid start\");\r\n        uint256 length = offset \u003e _proxies.length ? _proxies.length : offset;\r\n        out = new address[](length);\r\n        length += start;\r\n        length = length \u003e _proxies.length ? _proxies.length : length;\r\n        uint256 pos = 0;\r\n        for(uint256 i = start; i \u003c length; i++) {\r\n            out[pos++] = _proxies[i];\r\n        }\r\n    }\r\n}"},"IDoubleProxy.sol":{"content":"pragma solidity ^0.6.0;\r\n\r\ninterface IDoubleProxy {\r\n    function init(address[] calldata proxies, address currentProxy) external;\r\n    function proxy() external view returns(address);\r\n    function setProxy() external;\r\n    function isProxy(address) external view returns(bool);\r\n    function proxiesLength() external view returns(uint256);\r\n    function proxies(uint256 start, uint256 offset) external view returns(address[] memory);\r\n    function proxies() external view returns(address[] memory);\r\n}"}}